
// Inline grid
.igrid {
	display: inline-grid;

	&.ar { // auto-rows
		grid-auto-rows: auto;
	}
}

// inline flexbox grid
.flex {
	display: flex;

	&.bottom, .bottom {
		align-self: flex-end;
	}
}

// utility class to clear nav and twitter button
// on pages without banner graphics
.no-header {
  padding: u();
  @include media('>desktop') { & {
    padding-top: u(8);
  }}
}

/**
 * Flexbox Grid System
 * Variables are configured in /util/_variables
 *
 * Borrows heavily from Flexbox Grid Sass
 * @link https://github.com/hugeinc/fbg-sass/blob/master/fbg.scss
 */

$gutter-compensation: $grid-gutter-width * .5 * -1;
$half-gutter-width: $grid-gutter-width * .5;

.fc {
  box-sizing: border-box;
  max-width: $container-width;
  margin: 0 auto;
}

.container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-right: $grid-outer-margin;
  padding-left: $grid-outer-margin;
}

.row {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-right: $gutter-compensation;
  margin-left: $gutter-compensation;
}

.row.reverse {
  flex-direction: row-reverse;
}

.col.reverse {
  flex-direction: column-reverse;
}

%fbg-sass-col-common {
  box-sizing: border-box;
  flex-grow: 0;
  flex-shrink: 0;
  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
}

$name: xs;
.col-#{$name} {
  @extend %fbg-sass-col-common;
  flex-basis: auto;
}
@for $i from 1 through $total-columns {
  .col-#{$name}-#{$i} {
    @extend %fbg-sass-col-common;
    flex-basis: 100% / $total-columns * $i;
    max-width: 100% / $total-columns * $i;
  }
}
@for $i from 0 through $total-columns {
  .col-#{$name}-offset-#{$i} {
    @extend %fbg-sass-col-common;
    @if $i == 0 {
      margin-left: 0;
    } @else {
      margin-left: 100% / $total-columns * $i;
    }
  }
}
.col-#{$name} {
  flex-grow: 1;
  flex-basis: 0;
  max-width: 100%;
}
.start-#{$name} {
  justify-content: flex-start;
  text-align: left;
}

.center-#{$name} {
  justify-content: center;
  text-align: center;
}

.end-#{$name} {
  justify-content: flex-end;
  text-align: right;
}

.top-#{$name} {
  align-items: flex-start;
}

.middle-#{$name} {
  align-items: center;
}

.bottom-#{$name} {
  align-items: flex-end;
}

.around-#{$name} {
  justify-content: space-around;
}

.between-#{$name} {
  justify-content: space-between;
}

.first-#{$name} {
  order: -1;
}

.last-#{$name} {
  order: 1;
}


@each $breakpoint in $grid-breakpoints {
  $name: nth($breakpoint, 1);
  $size: nth($breakpoint, 2);
  $container: nth($breakpoint, 3);

  .col-#{$name} {
    @extend %fbg-sass-col-common;
  }
  @for $i from 0 through $total-columns {
    .col-#{$name}-#{$i} {
      @extend %fbg-sass-col-common;
    }
  }
  @for $i from 0 through $total-columns {
    .col-#{$name}-offset-#{$i} {
      @extend %fbg-sass-col-common;
    }
  }
}


@each $breakpoint in $grid-breakpoints {
  $name: nth($breakpoint, 1);
  $size: nth($breakpoint, 2);
  $container: nth($breakpoint, 2);
  @include media('>' + $size) {
    .fc {
      width: $container;
    }

    .col-#{$name} {
      flex-basis: auto;
    }
    @for $i from 1 through $total-columns {
      .col-#{$name}-#{$i} {
        flex-basis: 100% / $total-columns * $i;
        max-width: 100% / $total-columns * $i;
      }
    }
    @for $i from 0 through $total-columns {
      .col-#{$name}-offset-#{$i} {
        @if $i == 0 {
          margin-left: 0;
        } @else {
          margin-left: 100% / $total-columns * $i;
        }
      }
    }
    .col-#{$name} {
      flex-grow: 1;
      flex-basis: 0;
      max-width: 100%;
    }
    .start-#{$name} {
      justify-content: flex-start;
      text-align: left;
    }

    .center-#{$name} {
      justify-content: center;
      text-align: center;
    }

    .end-#{$name} {
      justify-content: flex-end;
      text-align: right;
    }

    .top-#{$name} {
      align-items: flex-start;
    }

    .middle-#{$name} {
      align-items: center;
    }

    .bottom-#{$name} {
      align-items: flex-end;
    }

    .around-#{$name} {
      justify-content: space-around;
    }

    .between-#{$name} {
      justify-content: space-between;
    }

    .first-#{$name} {
      order: -1;
    }

    .last-#{$name} {
      order: 1;
    }
  }
}
